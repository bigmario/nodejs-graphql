type Query {
    hello: String
    user(id: ID!): User
    allUsers: [User!]!
    product(id: ID!): Product
    allProducts: [Product!]!
    allCategories: [Category!]!
}

input CreateProductDto {
  name: String!
  price: Float!
  description: String!
  image: URL!
  categoryId: ID!
}

input UpdateProductDto {
  name: String
  price: Float
  description: String
  image: URL
  categoryId: ID
}

input CreateCategoryDto {
  name: String!
  image: URL!
}

type Mutation {
  login(email: EmailAddress!, password: String!): AuthResponse
  addProduct(dto: CreateProductDto): Product!
  updateProduct(id: ID!, dto: UpdateProductDto!): Product
  deleteProduct(id: ID!): ID
  addCategory(dto: CreateCategoryDto): Category!
}

type User {
  id: ID!
  email: EmailAddress!
  password: String!
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: URL!
  createdAt: String!
  categoryId: ID!
  category: Category!
}

type Category {
  id: ID!
  name: CategoryNameType!
  image: URL!
}

type AuthResponse {
  access_token: String!
  user: User!
}

type User {
  id: ID!
  email: EmailAddress!
  role: String!
  createdAt: String!
}

scalar CategoryNameType
